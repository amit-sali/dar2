#include<iostream>
#include<vector>
#include<string>
#include<algorithm>
using namespace std;

class Record{
public:
int item_code,quantity;
float cost;
string name;

bool operator==(const Record &o1){
if(name==o1.name)
 return 1;
return 0;
}

bool operator<(const Record & o1){
if(item_code<o1.item_code)
 return 1;
return 0;
}
};
		
vector <Record>r1;
void insert();
void display();
void print1(Record &r1);
void search();
void del();

void insert(){
Record o1;
cout<<"\nEnter The Name: ";
cin>>o1.name;
cout<<"\nEnter Item Code: ";
cin>>o1.item_code;
cout<<"\nEnter Required Quantity: ";
cin>>o1.quantity;
cout<<"\nEnter Cost: ";
cin>>o1.cost;

r1.push_back(o1);		
}

void display(){
for_each(r1.begin(), r1.end(), print1);
}

void print1(Record &r1){
cout<<"\nThe Name is: "<<r1.name<<endl;
cout<<"Item_code is: "<<r1.item_code<<endl;
cout<<"Quantity: "<<r1.quantity<<endl;
cout<<"Cost: "<<r1.cost<<endl;		
}

void search(){
Record o1;
vector <Record>::iterator i;

cout<<"\nEnter Name to be Searched: ";    
cin>>o1.name;

i=find(r1.begin(),r1.end(),o1);
if(i==r1.end()){
 cout<<"\nNot found";
}
else{
 cout<<"\nRecord found";
}
}

bool compare(const Record &r1, const Record &r2)
{
return r1.item_code<r2.item_code;
}

void del(){
vector<Record>::iterator i;
Record o1;
cout<<"\nEnter Name of Record to be Delete: ";
cin>>o1.name;
i=find(r1.begin(),r1.end(),o1);

if(i==r1.end()){
 cout<<"\nNot found";
}

else{
r1.erase(i);
cout<<"\nDeleted";
}
}

int main(){
int ch;
do{
cout<<"\n***MENU***";
cout<<"\n1.Insert";
cout<<"\n2.Display";
cout<<"\n3.Search";
cout<<"\n4.Sort";
cout<<"\n5.Delete";
cout<<"\n6.Exit";

cout<<"\nEnter Your Choice: ";
cin>>ch;

switch(ch){
case 1: cout<<"\nEnter Details of Item: ";
        insert();
        break;
case 2: cout<<"\nDisplay Details of Item: ";
        display();
        break;
case 3: search();
        break;
case 4: sort(r1.begin(),r1.end(),compare);
        cout<<"\n sorted order on roll number";
        display();
        break;
case 5: del();
        break;	 	 	      
case 6: cout<<"\nWrong Choice Entered";
        break;
}
}while(ch!=6);
return 0;
}
